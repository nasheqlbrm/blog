---
badges: true
categories:
- TIL
title: "Streaks"
description: "Games of chance"
author: "Kaushik Sinha"
date: "12/19/2024"
draft: false 
format: live-html
bibliography: ../../references.bib
toc: true
pyodide:
  packages:
    - numpy
    - pandas
    - ipywidgets
    - jinja2
---

# Introduction

Following the treatment in @dorhauer_07032019, suppose we have a game where

* a team has $p$ probability of winning a round of the game (aka hit-rate)
* $q=1-p$ is the probability of losing a round of the game
* $n$ is the number of independent rounds of the game
* $r \in [0,\ldots,n]$ denotes the length of a streak
    * An $r$-game losing streak means you lose $r$ consecutive games.

## How many $r$ game windows are possible within $n$ rounds?
To make this concrete, let $r=3$ and $n=10$. There are $8$ different $3$-game windows where a streak could occur within $10$ game rounds (games 1-3, 2-3,…,8-10). So there are $n-r$ different $r$ game windows possible within $n$ rounds. 

## How many opportunities are there to start a winning streak?
In $n$ rounds, any $r$-game winning streak will have to start by game $n-r+1$ at the latest. Thus, in $10$ rounds, any $3$-game winning streak  will have to start by game $8$ at the latest. Any loss in the first $n-r$ games can potentially be followed by a $r$-game winning streak. For a $p$ hit-rate team, we expect $(n-r)q$ losses over the first $n-r$ games, plus the first game (which can always start a winning streak as there is no loss from a previous game to consider). That means a $p$ hit-rate team will have, on average, about $1+(n-r)q$ opportunities to begin a winning streak of at least $r$ games.

Similarly, in $n$ rounds, any $r$-game losing streak will have to start by game $n-r+1$ at the latest. Any win in the first $n-r$ games can potentially be followed by a $r$-game losing streak. For a $p$ hit-rate team, we expect $(n-r)p$ wins over the first $n-r$ games, plus the first game (which can always start a losing streak as there is no win from a previous game to consider). That means a $p$ hit-rate team will have, on average, about $1+(n-r)p$ opportunities to begin a losing streak of at least $r$ games.

## The expected number of losing streaks
The expected number of losing streaks is the product of the expected number of opportunities to start a losing streak times the probability of $r$ consecutive losses, so $(1+(n−r)p)q^{r}$

```{pyodide}
n = 200 # number of rounds of the game
r = 4 # length of losing streak
p = 0.6 # probability of win
q = 1-p # probability of loss
els = (1 + (n-r)*p)*(q**r) #expected losing streaks
print(f'The expected number of losing streaks of length {r} somewhere among {n} independent rounds of the game is approximately {els:1.4f}')
```

## The probability of at least one losing streak
The probability of at least one losing streak is 1 minus the probability of $0$ losing streaks. We first determine the probability of not completing a losing streak at every one of the opportunities we have for starting a losing streak. So, in other words, we will find the probability of having a winning streak at every one of these opportunities.

Now $q^{r}$ is the probability of having a losing streak at any opportunity. Hence, $(1-q^{r})$ is the probability of having a winning streak at any opportunity. So, $(1-q^{r})^{1+(n−r)p}$ is the probability of having a winning streak at each and every one of the $1+(n−r)p$ opportunities for starting a losing streak.

Finally, we have that $1 - (1-q^{r})^{1+(n−r)p}$ is the probability of at least one losing streak.

```{pyodide}
n = 200 # number of rounds of the game
r = 4 # length of losing streak
p = 0.6 # probability of win
q = 1-p # probability of loss
prob = 1 - ( (1 - (q**r) )** (1+(n-r)*p) )
print(f'The probability of at least one losing streak of length {r} somewhere among {n} independent rounds of the game is approximately {prob:1.4%}')
```

## The longest expected losing streak

From @soccerwidow_streaks_note, the length of the longest expected losing streak is given by $\frac{|ln(n)|}{|ln(q)|}$. 

```{pyodide}
import pandas as pd
import numpy as np
n = 50 # number of rounds of the game
qs = np.arange(0.1,1,0.1) #range for the loss probability 
df = (pd.DataFrame({'q': qs, 'n': [n]*len(qs)})
    .assign(hit_rate = lambda df_: (1.0 - df_.q),
            odds = lambda df_: df_.hit_rate.pow(-1),
            max_losing_streak = lambda df_: np.abs(np.log(df_.n)
                                                   .div(np.log(df_.q))
                                                  )
           )
    [['q','odds','max_losing_streak','n']]
     )
df.style \
  .format(precision=2, thousands=",")
```

Similarly, the length of the longest expected winning streak is $\frac{|ln(n)|}{|ln(p)|}$.

## The number of rounds played to encounter a losing streak of a particular length

From @soccerwidow_streaks_note, for a game where the probability of losing at any given round is $q$, we expect to have encountered a losing streak of length $r$ somewhere on or before $\frac{1}{q^{r}}$ rounds.

```{pyodide}
from itertools import chain
import pandas as pd
import numpy as np
qs = np.arange(0.5,0.61,0.05) #range for the loss probability 
streak_lengths = [3, 5, 10]
rs = chain.from_iterable( [ [r] * len(qs) for r in streak_lengths ] )
df = (pd.DataFrame({'q': np.tile(qs, len(streak_lengths)),
                    'r': rs
                   })
    .assign(hit_rate = lambda df_: (1.0 - df_.q),
            odds = lambda df_: df_.hit_rate.pow(-1),
            n = lambda df_: df_.q.pow(-1).pow(df_.r)
           )
    .drop(columns=['hit_rate'])
    .pivot(index=['q','odds'], columns=['r'], values=['n'])  
    .reset_index()
    .sort_values(by=['q'], ascending=False)
     )
df.style \
  .format(precision=2, thousands=",")
```

## Starting Bankroll
For strategies with a hit rate between 45% to 55% the starting bank roll should be (Length of maximum losing streak X planned stake per bet X 5)